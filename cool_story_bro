/*
 *                BSidesTLV Challenge by Cellebrite Research
 * 
 *                                        cyberweap                                         
 *                                   oncyberorganizati                                     
 *                               oncybertechniquecyberthr                                  
 *                       eatcyberplagiar           ismcyber                                
 *                    namecyberheav                  encyber                               
 *                  trespasscyberte                   xtcybe                               
 *                  ractivismcyberju                   nkcyb                               
 *                  erpatientcy berjih    adistcybera  thlet                               
 *                  iccyberdeckcybersla ngcybersurgical cybe                               
 *                  rdeathcybercommun  itycyberwritingcyberc                               
 *                 rookc  yberworldcy  bermarketplacecyberli                               
 *                bertariancyberhatecy berterroris tcybergot                               
 *               hiccyberpoliticscyb   erthiefcyberconspirac                               
 *              ycyberconflictcybernavigationcyberca  pital                                
 *             istcy          bersoulcyberglobec     yberop                                
 *            erati                      onscybe     rslack                                
 *           ercybe                                 rsynag                                 
 *          oguecy                                 bergen                                  
 *         recybe                                  rforum                                  
 *         cyber                      stud        cyberc                                   
 *         zarc                      yberc urr   encycy                                    
 *         berb                      ookcyberch  atcyb                         erpsychol   
 *        ogycy                      berthugcy  berzi                        necyberwarfa  
 *        recyb                     erprostitu tionc                       yberso    ciol  
 *        ogist                     cyberscie  ncecy                     berpoli    cecyb  
 *        ercit                    ycybersta  lkcybe                   rsociet     ycybe   
 *        rbudd                    ycyberco   pcyberequivalentcybe   rghetto     cyber     
 *         roma                   ncecyber    teachingcybereroticcybercele      brity      
 *         cybe                   rfronti     ercyb   ertra   iningcyber      langua       
 *         gecy                  bercrime      cyb   erspeechcyburbanc      ybersc         
 *         holar               shipc yberw         izardcyberhealthcy     berterr          
 *          itor             ycybe  rgovern         mentcyberintelligen   cecybera         
 *          gecyb            ernautcyberdia                     rycyberf    lirtcyber      
 *           freed            omcybercorpo              rati       oncybe  rcas hcybe      
 *           relite              cybe                   rcom        mandcy  berimper       
 *            ialism                                cyb              erhar    assm         
 *             entcyber                            hugc              yberc     ommu        
 *                nicatio                          ncyb              erfictioncyber        
 *      psy        chologistc                       yber           commutercyberst         
 *     alkercy    berfriendshipcybe                  rwr         itercyb    e              
 *     rwifecyberwarc yberetiquettecyberthe           ftcy    bercapi                      
 *     talc yberclassroomc    yberiancyberphy sicalcyberbattlecyber                        
 *      cent  riccyberid         entitycyber educationcyberunitc                           
 *       yber   sportc         yberanonymit ycybe rloafingcyb                              
 *        erchurchcy           bervigilant  ecyb                                           
 *         erloser              cyberbri   dgec                                            
 *           ybe                rcultu    recy                                             
 *                               berhac  kerc                                              
 *                                yberbazaar                                               
 *                                  cyberco                                                
 *                                    nve              
 */
 
char tmp_s[64];
char secret_passcode[4] = {'5','5','5',0}; 	//get this 3-digit passcode (was flashed with different code on challenge device)
char password[4] = {'0','0','0',0}; 

void blink(int pin_num)
{
  int i;
  for (i=0; i < 20; i++)
  {
    digitalWrite(pin_num, HIGH);
    delay(100);
    digitalWrite(pin_num, LOW);
    delay(100);
  }
}

int is_equal(char* s1, char* s2)
{
  return !strcmp(s1, s2);
}

void my_print(char* s)
{
  if (!digitalRead(12))
  {
     Serial.print(s);  
  }
  else
  {
    sendString(s, 13);
  }  
}

void setup()
{
  Serial.begin(9600);
  
  // input selectors
  pinMode(4, INPUT);
  pinMode(8, INPUT);
  pinMode(9, INPUT);
  pinMode(10, INPUT);
  pinMode(11, INPUT);
  pinMode(12, INPUT);
  
  // LEDs
  pinMode(2, OUTPUT);
  pinMode(3, OUTPUT);
  pinMode(13, OUTPUT);
    
  digitalWrite(2, LOW);
  digitalWrite(3, LOW);
  digitalWrite(13, LOW); 
}

bool authentication_request()
{
  blink(2);
  if (digitalRead(4))
  {
    digitalWrite(2, HIGH);
    delay(3000);
    if (!digitalRead(4))
    {
      digitalWrite(3, HIGH);
      return 1;
    }
  }
  digitalWrite(2, LOW);
  digitalWrite(3, LOW);
  return 0;
}


int get_pass_length()
{
  return 1 + ( (digitalRead(8) << 2) | (digitalRead(9) << 1) | (digitalRead(10)));
}

void zero_last_byte(char* password)
{
  int pass_length;
  pass_length = get_pass_length();
  password[pass_length] = 0;
}

int read_digit_from_pin(int pin)
{
//actual implementation was flashed only on challenge device
}


void read_password_from_user()
{
  int pass_length;
  pass_length = get_pass_length();
  if (pass_length <= sizeof(password))
  {
    blink(13);
    for (int i=0 ; i < pass_length; i++)
    {
      password[i] = '0' + read_digit_from_pin(11);    
      delay(1000);
    }
    blink(13);
    
    zero_last_byte(password);
  }
  else
  {
    sprintf(tmp_s, "The RFC allows 1-8 bytes, I allow up to %d digits\n", sizeof(password));
    my_print(tmp_s);
  }
}


void loop()
{
  if (authentication_request())
  {
    delay(3000);
    read_password_from_user();
    delay(2000);
    if (is_equal(password, "951"))
    {
      sprintf(tmp_s, "awesome! %s\n", secret_passcode);
    }
    else
    {
      sprintf(tmp_s, "%s is wrong :(\n", password);
    }
	my_print(tmp_s);
  }
  
  else
  {
    my_print("authentication failed\n");
  }
  
  // Before next loop, init all the buffers and LEDS to ensure 'clean' state.
  memset(password, 0, sizeof(password));
  memset(tmp_s, 0, sizeof(tmp_s));
  digitalWrite(2, LOW);
  digitalWrite(3, LOW);
  delay(3000);
}
